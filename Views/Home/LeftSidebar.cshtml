<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
<link rel="stylesheet" href="~/css/SidebarStyles.css" asp-append-version="true"/>
@model CombinedViewModel
@using System.Web

<div id="leftSidebar" class="sidebar-sb">
    <!-- Logo -->
    <div class="logo-container-sb">
        <img src="~/image.png" alt="Logo">
        <h4>Obecník</h4>
    </div>

    <!-- Dynamic Avatar Container (left sidebar) -->
    <div class="avatar-container-sb" id="user-list-left-sb"></div>

    <!-- Scrollable Navigation (fills remaining height) -->
    <div class="nav-container-sb" id="nav-links-sb">
        <!-- Dynamic content via JS -->
    </div>
    <div class="profile-container-sb">
        <div class="profile-header-sb">
            <!-- Icon Button for User Profile (Redirect to /Account on click) -->
            <button class="icon-btn-sb" id="user-profile-btn-sb2">
                <i class="bi bi-person"></i>
            </button>
            <!-- Display the logged-in username -->
            <span class="text-sb" id="username-sb2">@User.Identity?.Name</span>
            <!-- Hamburger Menu Button -->
            <button class="icon-btn-sb" id="hamburger-menu-btn-sb2">
                <i class="bi bi-box-arrow-right"></i>
            </button>
        </div>

        <!-- Dropdown Menu (Initially hidden) -->
        <div id="dropdown-menu-sb" class="dropdown-menu-sb" style="display: none;">
            <button class="dropdown-item-sb" id="logout-btn-sb">Odhlásit se</button>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        let navItems = [
            {icon: '', label: 'Obecné', link: '/#', active: false, dot: true},
        ];

        // Users (with proper dynamic community name and link to posts)
        let users = [
            {
                name: '@Html.Raw(HttpUtility.JavaScriptStringEncode(Model.HomeViewModel?.CommunityName))',
                image: "/Images/GenericCommunity.png",
                dot: true,
                link: "/#"  // <-- Adjust this to the correct URL showing posts or content
            }
        ];

        const navContainer = document.getElementById('nav-links-sb');

        // Render avatars dynamically (left sidebar)
        function renderLeftAvatars() {
            const userList = document.getElementById('user-list-left-sb');
            userList.innerHTML = '';

            users.forEach((user, index) => {
                const item = document.createElement('div');
                item.className = 'user-item-sb';
                item.innerHTML = `
            <!-- Wrap the whole div inside a clickable link -->
            <a href="${user.link}" class="avatar-btn-container-sb" onclick="onAvatarClick(${index})">
                <button class="avatar-btn-sb">
                    <img src="${user.image}" alt="${user.name}">
                </button>
                <span class="text-sb">${user.name}</span>
                ${user.dot ? `<span class="dot-sb ms-auto"></span>` : ''}
            </a>
        `;
                userList.appendChild(item);
            });
        }

        // Render navigation dynamically (left sidebar)
        function renderNav() {
            navContainer.innerHTML = '';

            navItems.forEach((item, index) => {
                const div = document.createElement('div');
                div.className = `nav-item-sb${item.active ? ' active-sb' : ''}`;
                div.dataset.index = index;

                div.innerHTML = `
            <a href="${item.link}" onclick="updateDot(${index})">
                ${item.icon ? `<span class="material-icons me-3">${item.icon}</span>` : '<span class="material-icons me-3" style="opacity: 0;">place</span>'}
                <span class="text-sb">${item.label}</span>
                ${item.dot ? `<span class="dot-sb ms-auto"></span>` : ''}
            </a>
        `;

                navContainer.appendChild(div);
            });
        }

        // Update dot indicator on nav click
        function updateDot(index) {
            navItems = navItems.map((item, i) => ({
                ...item,
                dot: i === index
            }));
            window.location.href = window.location.origin + "/";
            renderNav();
        }

        // Handle avatar click and update dots for avatars
        function onAvatarClick(index) {
            // Update the dot state for users
            users = users.map((user, i) => ({
                ...user,
                dot: i === index
            }));
            renderLeftAvatars();
        }

        const logoutBtn2 = document.getElementById('hamburger-menu-btn-sb2');
        logoutBtn2.addEventListener('click', () => {
            window.location.href = '/Account/Logout'; // Redirect to the logout page
        });

        // Redirect to /Account when user profile button is clicked
        const userProfileBtn2 = document.getElementById('user-profile-btn-sb2');
        userProfileBtn2.addEventListener('click', () => {
            window.location.href = '/Account'; // Redirect to the account page
        });

        // Initial render
        renderLeftAvatars();
        renderNav();
    })
</script>
