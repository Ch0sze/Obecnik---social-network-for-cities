@using Application.Api.Extensions
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Application.Api.Models.CombinedViewModel

@{
    ViewData["Title"] = "Upravit úĝet";
}
<!-- Profilový obrázek (náhled) -->
@if (!string.IsNullOrEmpty(Model.AccountViewModel!.Picture))
{
    <img id="imagePreview" src="@Model.AccountViewModel!.Picture" alt="Profilový obrázek" class="profile-image" />
}
else
{
    <img id="imagePreview" src="Images/GenericAvatar.png" alt="Výchozí profilový obrázek" class="profile-image" />
}

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

<!-- Formulář pro úpravu úĝtu -->
<div class="edit-account-container">
    <h2>Upravit úĝet</h2>
    <form id="accountForm" asp-action="UpdateAccount" method="post" enctype="multipart/form-data" novalidate>
        @Html.AntiForgeryToken()

        <!-- Skrytý input pro signalizaci odstranění obrázku -->
        <input type="hidden" id="RemoveImage" name="RemoveImage" value="false"/>

        <!-- Email -->
        <div class="mb-3">
            <label asp-for="AccountViewModel!.Email" class="fw-bold">Email:</label>
            <input asp-for="AccountViewModel!.Email" class="form-control" />
            <span asp-validation-for="AccountViewModel!.Email" class="invalid-feedback"></span>
        </div>

        <!-- Jméno -->
        <div class="mb-3">
            <label asp-for="AccountViewModel!.FirstName" class="fw-bold">Jméno:</label>
            <input asp-for="AccountViewModel!.FirstName" class="form-control"/>
            <span asp-validation-for="AccountViewModel!.FirstName" class="invalid-feedback"></span>
        </div>

        <!-- Příjmení -->
        <div class="mb-3">
            <label asp-for="AccountViewModel!.LastName" class="fw-bold">Příjmení:</label>
            <input asp-for="AccountViewModel!.LastName" class="form-control"/>
            <span asp-validation-for="AccountViewModel!.LastName" class="invalid-feedback"></span>
        </div>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<AUTO GENERATED BY CONFLICT EXTENSION<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< master
            <!-- Request Admin Rights or Paygate Button -->
            <div class="text-center mt-4">
                @if (Model.AccountViewModel?.Role == "UnpaidAdmin")
                {
                    <a href="/Account/AdminPaygate" class="btn btn-success fw-bold px-4">
                        Zaplatit za práva
                    </a>
                }
                else
                {
                    <a href="/Account/RequestAdminRights" class="btn btn-warning fw-bold px-4">
                        Žádat o práva administrátora
                    </a>
====================================AUTO GENERATED BY CONFLICT EXTENSION====================================
        <!-- Adresa -->
        <div class="mb-3" style="position: relative;">
            <label asp-for="AccountViewModel!.Residence" class="register-label" style="font-weight: bold; color: black;">Lokalita:</label>

            <!-- Readonly Input (Zobrazuje vybranou adresu) -->
            <input type="text"
                   id="readonlyInput"
                   class="register-input form-control"
                   placeholder="Vyberte adresu a PSČ"
                   readonly
                   style="background-color: #FAFAFA; border: none; border-radius: 0; box-shadow: none; outline: none; cursor: pointer;"
                   value="@(Model.AccountViewModel.Residence + (string.IsNullOrEmpty(Model.AccountViewModel.PostalCode) ? "" : ", " + Model.AccountViewModel.PostalCode))"/>

            <!-- Hidden Search Input -->
            <input type="text"
                   id="searchInput"
                   class="register-input form-control @ViewData.ValidationClass(model => Model.AccountViewModel!.Residence)"
                   placeholder="Zadejte adresu nebo PSČ"
                   style="display: none; background-color: #FAFAFA; border: none; border-radius: 0; box-shadow: none; outline: none;"/>

            <!-- Skryté pole pro uložení residence a PSČ -->
            <input type="hidden" asp-for="AccountViewModel!.Residence" id="residenceField"/>
            <input type="hidden" asp-for="AccountViewModel!.PostalCode" id="postalcodeField"/>

            <!-- Box s návrhy -->
            <ul id="suggestions" class="list-group" style="position: absolute; width: 100%; z-index: 10;"></ul>
            <p class="form-text text-muted" style="color: gray;">Pokud nemůžete najít svou adresu, zkuste zadat PSČ</p>
            <span asp-validation-for="AccountViewModel!.Residence" class="invalid-feedback"></span>
            <span asp-validation-for="AccountViewModel!.PostalCode" class="invalid-feedback"></span>
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>AUTO GENERATED BY CONFLICT EXTENSION>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> account
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<AUTO GENERATED BY CONFLICT EXTENSION<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< master
                }
            </div>
====================================AUTO GENERATED BY CONFLICT EXTENSION====================================
        </div>
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>AUTO GENERATED BY CONFLICT EXTENSION>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> account

        <!-- Obrázek uživatele pro aktualizaci -->
        <div class="mb-3">
            <label class="fw-bold">Obrázek:</label>
            <input type="file" id="ImageFile" name="ImageFile" class="form-control" accept="image/*"
                   onchange="previewImage(event)"/>
        </div>

        <button type="submit" class="btn btn-primary">Uložit změny</button>
    </form>
</div>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<AUTO GENERATED BY CONFLICT EXTENSION<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< master

    <!-- Right Sidebar -->
    <div class="bg-warning bg-opacity-25 d-flex flex-column vh-100 position-sticky top-0">
        <partial name="RightSidebar"/>
    </div>
</div>

<partial name="ToggleButton"/>
@Html.Partial("_AddCommunity")
====================================AUTO GENERATED BY CONFLICT EXTENSION====================================
<script>
    $(document).ready(function () {
        // Inicializace validátoru, který validuje i skryté elementy
        $("#accountForm").validate({
            ignore: [], // validovat i skryté pole
            errorClass: "invalid-feedback",
            errorElement: "span",
            errorPlacement: function (error, element) {
                error.insertAfter(element);
            },
            highlight: function (element, errorClass) {
                $(element).addClass("is-invalid");
            },
            unhighlight: function (element, errorClass) {
                $(element).removeClass("is-invalid");
            }
        });

        // Odeslání formuláře pomocí AJAXu, aby nedošlo k refreshi a obrázek zůstal
        $("#accountForm").on("submit", function (e) {
            e.preventDefault();
            // Pokud formulář neprojde validací, AJAX se neprovede
            if(!$(this).valid()){
                return;
            }
            var formData = new FormData(this);

            $.ajax({
                url: $(this).attr("action"),
                type: "POST",
                data: formData,
                contentType: false,
                processData: false,
                success: function (response) {
                    // Případně zde můžete zobrazit informaci o úspěšném uložení,
                    // ale stránka se neobnoví a obrázek zůstane zobrazen
                    alert("Změny byly úspěšně uloženy.");
                },
                error: function (xhr, status, error) {
                    alert("Při ukládání došlo k chybě: " + error);
                }
            });
        });

        // ===== Náhled obrázku při výběru =====
        function previewImage(event) {
            var input = event.target;
            if (input.files && input.files[0]) {
                $("#RemoveImage").val('false');
                var reader = new FileReader();
                reader.onload = function (e) {
                    $("#imagePreview").attr('src', e.target.result);
                };
                reader.readAsDataURL(input.files[0]);
            }
        }
        window.previewImage = previewImage; // zajistí dostupnost funkce

        // ===== Práce s adresou =====
        const readonlyInput = document.getElementById("readonlyInput");
        const searchInput = document.getElementById("searchInput");
        const suggestionsBox = document.getElementById("suggestions");
        const residenceField = document.getElementById("residenceField");
        const postalcodeField = document.getElementById("postalcodeField");

        let timeout = null;

        readonlyInput.addEventListener("click", function () {
            readonlyInput.style.display = "none";
            searchInput.style.display = "block";
            searchInput.focus();
        });

        searchInput.addEventListener("input", function () {
            clearTimeout(timeout);
            timeout = setTimeout(() => { searchCityPostcode(); }, 300);
        });

        async function searchCityPostcode() {
            const query = searchInput.value.trim();
            if (query.length < 2) {
                suggestionsBox.style.display = "none";
                return;
            }

            const apiKey = "ulZ6yvSAHSr1Nc-_aHfZUMclfryM1ZDKLUgOaU8dUgw";
            const url = `https://api.mapy.cz/v1/suggest?lang=cs&apikey=${apiKey}&query=${encodeURIComponent(query)}&limit=10&type=regional.address&countryCode=CZ&locality=CZ`;

            try {
                const response = await fetch(url);
                if (!response.ok) throw new Error("Chyba při naĝítání API");
                const data = await response.json();
                const seen = new Set();
                suggestionsBox.innerHTML = "";

                if (data.items?.length > 0) {
                    data.items.forEach(item => {
                        const city = item.location?.split(",")[0].trim() || "";
                        const zip = item.zip || "";
                        const suggestionText = `${city}, ${zip}`.trim();

                        if (!seen.has(suggestionText)) {
                            seen.add(suggestionText);
                            const listItem = document.createElement("li");
                            listItem.classList.add("list-group-item", "list-group-item-action");
                            listItem.textContent = suggestionText;
                            listItem.style.cursor = "pointer";
                            listItem.addEventListener("click", function () {
                                readonlyInput.value = suggestionText;
                                residenceField.value = city;
                                postalcodeField.value = zip.replace(/\s/g, "");
                                searchInput.value = "";
                                searchInput.style.display = "none";
                                readonlyInput.style.display = "block";
                                suggestionsBox.style.display = "none";
                            });
                            suggestionsBox.appendChild(listItem);
                        }
                    });
                    suggestionsBox.style.width = `${searchInput.offsetWidth}px`;
                    suggestionsBox.style.display = "block";
                } else {
                    suggestionsBox.style.display = "none";
                }
            } catch (error) {
                console.error("API Error:", error);
                suggestionsBox.style.display = "none";
            }
        }

        document.addEventListener("click", function (event) {
            if (!readonlyInput.contains(event.target) &&
                !searchInput.contains(event.target) &&
                !suggestionsBox.contains(event.target)) {
                suggestionsBox.style.display = "none";
                searchInput.style.display = "none";
                readonlyInput.style.display = "block";
            }
        });
    });
</script>

<style>
/* Kontejner pro formulář úprav úĝtu */
.edit-account-container {
    background-color: #FFFAEF;
    border: 1px solid #F98866;
    border-radius: 8px;
    padding: 2rem;
    max-width: 600px;
    margin: 2rem auto;
}

/* Sekce pro logo a nadpis */
.header-section {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 10px;
    margin-bottom: 1rem;
}

.header-section img {
    height: 60px;
}

.header-section h2 {
    margin: 0;
    color: #F98866;
}

/* Styl profilového obrázku */
.profile-image {
    display: block;
    margin: 1rem auto;
    width: 200px;
    height: 200px;
    object-fit: cover;
    border-radius: 50%;
    border: 2px solid #F98866;
}

/* Vstupní pole */
.form-control {
    background-color: #FAFAFA !important;
    border: none !important;
    border-radius: 0 !important;
    box-shadow: none !important;
    width: 100%;
}

/* Tlaĝítko pro uložení změn */
.btn-primary {
    background-color: #F98866;
    border: none;
    color: #FFF;
    padding: 0.5rem 1.5rem;
    border-radius: 9999px;
    font-weight: 600;
    cursor: pointer;
    font-size: 0.95rem;
}

.btn-primary:hover {
    background-color: #f77755;
}

/* Odkazy v login sekci */
.login-link a,
.login-link a:link,
.login-link a:visited,
.login-link a:hover,
.login-link a:active {
    color: #F98866 !important;
    text-decoration: none;
}

/* Zvýraznění neplatných polí */
.is-invalid {
    border-color: #dc3545 !important;
}

.invalid-feedback {
    display: block;
    color: #dc3545;
}
</style>

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>AUTO GENERATED BY CONFLICT EXTENSION>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> account