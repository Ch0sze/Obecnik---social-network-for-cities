@model RegisterViewModel
@{
    ViewData["Title"] = "Registrace";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-12 col-md-8 col-lg-6">
            <!-- Logo and label -->
            <div class="header-section text-center">
                <img src="~/image.png" alt="Logo" class="img-fluid" />
                <h2>OBECNÍK</h2>
            </div>

            <!-- Form container -->
            <div class="register-container p-4 w-100 mx-auto">
                <form asp-controller="Account" asp-action="RegisterSubmit" method="post" novalidate id="register-form">
                    <!-- Email -->
                    <div class="mb-3">
                        <label asp-for="Email" class="login-label" style="font-weight: bold; color: black;">Email:</label>
                        <input asp-for="Email"
                               class="form-control register-input @ViewData.ValidationClass(model => model.Email)"
                               placeholder="Email" style="background-color: #FAFAFA !important; 
                               border: none !important; border-bottom: 1px solid #F98866 !important; border-radius: 0 !important;
                               box-shadow: none !important; outline: none !important;"/>
                        <span asp-validation-for="Email" class="invalid-feedback"></span>
                    </div>

                    <!-- Password -->
                    <div class="mb-3">
                        <label asp-for="Password" class="register-label" style="font-weight: bold; color: black;">Heslo:</label>
                        <input asp-for="Password" type="password"
                               class="form-control register-input @ViewData.ValidationClass(model => model.Password)"
                               placeholder="********" style="background-color: #FAFAFA !important; 
                               border: none !important; border-bottom: 1px solid #F98866 !important; border-radius: 0 !important;
                               box-shadow: none !important; outline: none !important;"/>
                        <span asp-validation-for="Password" class="invalid-feedback"></span>
                    </div>

                    <!-- Repeat Password -->
                    <div class="mb-3">
                        <label asp-for="PasswordRepeat" class="register-label" style="font-weight: bold; color: black;">Opakovat heslo:</label>
                        <input asp-for="PasswordRepeat" type="password"
                               class="form-control register-input @ViewData.ValidationClass(model => model.PasswordRepeat)"
                               placeholder="********" style="background-color: #FAFAFA !important; 
                               border: none !important; border-bottom: 1px solid #F98866 !important; border-radius: 0 !important;
                               box-shadow: none !important; outline: none !important;"/>
                        <span asp-validation-for="PasswordRepeat" class="invalid-feedback"></span>
                    </div>

                    <!-- First Name -->
                    <div class="mb-3">
                        <label asp-for="FirstName" class="register-label" style="font-weight: bold; color: black;">Jméno:</label>
                        <input asp-for="FirstName"
                               class="form-control register-input @ViewData.ValidationClass(model => model.FirstName)"
                               placeholder="Jméno" style="background-color: #FAFAFA !important; 
                               border: none !important; border-bottom: 1px solid #F98866 !important; border-radius: 0 !important;
                               box-shadow: none !important; outline: none !important;"/>
                        <span asp-validation-for="FirstName" class="invalid-feedback"></span>
                    </div>

                    <!-- Surname -->
                    <div class="mb-3">
                        <label asp-for="LastName" class="register-label" style="font-weight: bold; color: black;">Příjmení:</label>
                        <input asp-for="LastName"
                               class="register-input form-control @ViewData.ValidationClass(model => model.LastName)"
                               placeholder="Příjmení" style="background-color: #FAFAFA !important; 
                               border: none !important; border-bottom: 1px solid #F98866 !important; border-radius: 0 !important;
                               box-shadow: none !important; outline: none !important;"/>
                        <span asp-validation-for="LastName" class="invalid-feedback"></span>
                    </div>

                    <!-- Checkbox for terms -->
                    <div class="form-check mb-3">
                        <input type="checkbox" id="terms" name="terms" class="form-check-input" />
                        <label for="terms" class="form-check-label text-dark fw-bold">Souhlasím s podmínkami užití</label>
                    </div>
                    <div id="terms-error" class="text-danger mb-3">
                        Musíte souhlasit s podmínkami užití pro registraci
                    </div>

                    <!-- Registration button -->
                    <div class="text-center">
                        <button type="submit" class="register-button" id="submit-button" disabled>
                            Registrace
                        </button>
                    </div>
                </form>

                @if (!string.IsNullOrWhiteSpace(Model.Message))
                {
                    <div class="alert alert-danger mt-4 text-center" role="alert">
                        @Model.Message
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="mt-4 register-link text-center" style="margin-bottom: 50px">
    Máte účet?
    <a href="/Account/Login">Přihlašte se zde</a>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const termsCheckbox = document.getElementById("terms");
        const termsError = document.getElementById("terms-error");
        const submitButton = document.getElementById("submit-button");

        // Initially show the error message if checkbox is not checked
        if (!termsCheckbox.checked) {
            termsError.classList.remove("d-none");
        }

        // Toggle error message visibility based on checkbox
        termsCheckbox.addEventListener("change", function () {
            if (termsCheckbox.checked) {
                termsError.classList.add("d-none"); // Hide error if checked
                submitButton.disabled = false; // Enable the submit button
            } else {
                termsError.classList.remove("d-none"); // Show error if not checked
                submitButton.disabled = true; // Disable the submit button
            }
        });

        // When submitting the form, check if checkbox is checked and show/hide error accordingly
        document.getElementById("register-form").addEventListener("submit", function (event) {
            if (!termsCheckbox.checked) {
                event.preventDefault(); // Prevent form submission
                termsError.classList.remove("d-none"); // Show error message
            }
        });
    });
</script>
