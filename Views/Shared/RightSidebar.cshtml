@using System.Security.Claims
@using Microsoft.AspNetCore.Mvc.TagHelpers
<!-- Right Sidebar -->
<link rel="stylesheet" href="~/css/SidebarStyles.css" asp-append-version="true" />
<div class="sidebar-sb right-sidebar-sb">

    <!-- Profile Header (right sidebar-specific) -->
    <div class="profile-header-sb">
        <!-- Group avatar and name -->
        <div class="profile-info-sb">
            <button class="icon-btn-sb" id="user-profile-btn-sb">
                <img id="imagePreview"
                     src="@Url.Action("GetUserPicture", "Account", new { id = User.GetId() })"
                     alt="Avatar"
                     onerror="this.src='/Images/GenericAvatar.png'"
                     class="profile-image icon-image" />
            </button>
            <span class="text-sb" id="username-sb"></span>
        </div>

        <!-- Dropdown (hidden by default) -->
        <div id="superadmin-dropdown-sb" class="dropdown-menu-sb" style="display: none;">
            <button class="dropdown-item-sb" onclick="window.location.href='/Account'">Zobrazit profil</button>
            <button class="dropdown-item-sb" onclick="window.location.href='/SuperAdmin'">Zobrazení žádostí</button>
            <button class="dropdown-item-sb" onclick="window.location.href='/SuperAdmin/Users'">Správa uživatelů</button>
            <button class="dropdown-item-sb" onclick="window.location.href='/SuperAdmin/Admins'">Zobrazení platících správců</button>
        </div>

        <!-- Logout Button -->
        <button class="icon-btn-sb" id="hamburger-menu-btn-sb">
            <i class="bi bi-box-arrow-right"></i>
        </button>
    </div>


    <!-- Dropdown Menu (Initially hidden) -->
    <div id="dropdown-menu-sb" class="dropdown-menu-sb" style="display: none;">
        <button class="dropdown-item-sb" id="logout-btn-sb">Odhlásit se</button>
    </div>

    <!-- User Avatars (Dynamic) -->
    <div id="user-list-sb" class="avatar-scroll-sb"></div>
</div>

<!-- Dynamic JavaScript -->
<script>

    // Get the user role from claims
    // Razor should resolve the value of the user role properly
    const userRole = '@User.FindFirst(ClaimTypes.Role)?.Value'
    

    const userProfileBtn = document.getElementById('user-profile-btn-sb');
    const superAdminDropdown = document.getElementById("superadmin-dropdown-sb");

    // Show the dropdown menu if user is SuperAdmin, otherwise redirect to /Account
    userProfileBtn.addEventListener('click', () => {
        if (userRole === "SuperAdmin") {
            // If the role is SuperAdmin, show the dropdown menu
            const isVisible = superAdminDropdown.style.display === "block";
            const rect = userProfileBtn.getBoundingClientRect();
            superAdminDropdown.style.top = `${rect.bottom + window.scrollY}px`;
            superAdminDropdown.style.left = `${rect.left + window.scrollX - 30}px`;
            superAdminDropdown.style.display = isVisible ? "none" : "block";
        } else {
            // Redirect to /Account if the role is not SuperAdmin
            window.location.href = '/Account';
        }
    });

    // Redirect to /Account/Logout when "Odhlásit se" is clicked
    const logoutBtn = document.getElementById('logout-btn-sb');
    logoutBtn.addEventListener('click', () => {
        window.location.href = '/Account/Logout';
    });

    // Hamburger menu, which logs out the user
    const hamburgerMenuBtn = document.getElementById('hamburger-menu-btn-sb');
    hamburgerMenuBtn.addEventListener('click', function () {
        window.location.href = '/Account/Logout';
    });
    
    // Handle petition rendering (can be enabled later)
    function renderPetition() {
        document.getElementById('petition-title-sb').innerText = petition.title;
        document.getElementById('petition-description-sb').innerText = petition.description;
        document.getElementById('petition-signatures-sb').innerText = `${petition.signatures} podpisů`;
    }
    document.addEventListener('DOMContentLoaded', function () {
        const userId = '@User.GetId()';
        fetch(`/account/users/${userId}/Firstname`)
            .then(response => {
                if (!response.ok) {
                    throw new Error(`Failed to fetch username. Status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                document.getElementById('username-sb').innerText = data.username;
            })
            .catch(error => {
                console.error('Error fetching username:', error);
            });
    });
    
</script>


