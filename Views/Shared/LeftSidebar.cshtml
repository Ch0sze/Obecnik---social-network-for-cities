<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
<link rel="stylesheet" href="~/css/SidebarStyles.css" asp-append-version="true"/>
@model CombinedViewModel
@using System.Web

<div id="leftSidebar" class="sidebar-sb">
        <a href="/" class="logo-container-sb" style="text-decoration: none; cursor: pointer;">
            <img src="~/image.png" alt="Logo">
            <h4>Obecník</h4>
        </a>

    <div class="avatar-container-sb" id="user-list-left-sb"></div>

    <div class="nav-container-sb" id="nav-links-sb"></div>

    <div class="profile-container-sb">
        <div class="profile-header-sb">
            <button class="icon-btn-sb" id="user-profile-btn-sb2">
                <i class="bi bi-person"></i>
            </button>
            <span class="text-sb" id="username-sb2"></span>
            <button class="icon-btn-sb" id="hamburger-menu-btn-sb2">
                <i class="bi bi-box-arrow-right"></i>
            </button>
        </div>
        <div id="dropdown-menu-sb" class="dropdown-menu-sb" style="display: none;">
            <button class="dropdown-item-sb" id="logout-btn-sb">Odhlásit se</button>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const urlParams = new URLSearchParams(window.location.search);
        let selectedCommunityId = urlParams.get('communityId');
        let channels = [{ icon: '', label: 'Obecné', link: '/#', active: false, dot: true }];
        let communities = [];

        async function fetchCommunities() {
            try {
                const response = await fetch('/api/sidebar/communities');
                if (!response.ok) throw new Error('Failed to fetch communities');

                const communitiesData = await response.json();
                communities = communitiesData.map(community => ({
                    name: community.name,
                    image: community.imageUrl,
                    link: community.link
                }));

                const isRootPath = window.location.pathname === '/' && !window.location.search && !window.location.hash;
                if (isRootPath && communities.length > 0) {
                    window.location.href = `/?communityId=${communities[0].link}`;
                    return;
                }

                renderLeftAvatars();
            } catch (error) {
                console.error('Error fetching communities:', error);
            }
        }

        function onAvatarClick(index) {
            selectedCommunityId = communities[index].link;
            window.location.href = `/?communityId=${selectedCommunityId}`;
        }

        function renderLeftAvatars() {
            const userList = document.getElementById('user-list-left-sb');
            userList.innerHTML = '';

            communities.forEach((user, index) => {
                const isSelected = user.link === selectedCommunityId;

                const item = document.createElement('div');
                item.className = 'user-item-sb';

                item.innerHTML = `
                    <div class="avatar-btn-container-sb" data-index="${index}">
                        <button class="avatar-btn-sb">
                            <img src="${user.image}" alt="${user.name}">
                        </button>
                        <span class="text-sb">${user.name}</span>
                        ${isSelected ? `<span class="dot-sb ms-auto"></span>` : ''}
                    </div>
                `;

                userList.appendChild(item);

                const container = item.querySelector('.avatar-btn-container-sb');

                container.addEventListener('click', () => {
                    onAvatarClick(index);
                });
                container.style.position = 'relative'; // Make container the positioning context

                container.addEventListener('contextmenu', (e) => {
                    e.preventDefault();
                    // Remove any existing menus
                    document.querySelectorAll('.leave-menu-sb').forEach(el => el.remove());

                    const menu = document.createElement('div');
                    menu.className = 'leave-menu-sb';
                    menu.innerHTML = `<button class="dropdown-item-sb">Opustit komunitu</button>`;

                    // Attach to the same container, with absolute positioning
                    menu.style.position = 'absolute';
                    menu.style.zIndex = 1000;

                    // Position just below the avatar button
                    const avatarBtn = container.querySelector('.avatar-btn-sb');
                    const btnRect = avatarBtn.getBoundingClientRect();
                    const containerRect = container.getBoundingClientRect();

                    menu.style.top = `${avatarBtn.offsetTop + avatarBtn.offsetHeight + 4}px`;
                    menu.style.left = `${avatarBtn.offsetLeft}px`;

                    container.appendChild(menu);

                    // Leave action
                    menu.querySelector('.dropdown-item-sb').addEventListener('click', async () => {
                        const communityId = communities[index].link;
                        try {
                            const response = await fetch('/AddCommunities/LeaveCommunity', {
                                method: 'POST',
                                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                                body: `communityId=${encodeURIComponent(communityId)}`
                            });
                            if (response.ok) {
                                window.location.href = '/';
                            } else {
                                alert('Nepodařilo se opustit komunitu.');
                            }
                        } catch (err) {
                            console.error('Leave error:', err);
                        }
                    });
                });

            });

            const addBtnContainer = document.createElement('div');
            addBtnContainer.className = 'user-item-sb';
            addBtnContainer.innerHTML = `<button class="add-btn-sb" id="add-community-btn">+ Přidat se do komunity</button>`;
            userList.appendChild(addBtnContainer);

            document.getElementById('add-community-btn').addEventListener('click', function () {
                const modal = new bootstrap.Modal(document.getElementById('addCommunityModal'));
                modal.show();
            });

            // Close context menu on outside click
            document.addEventListener('click', () => {
                document.querySelectorAll('.leave-menu-sb').forEach(el => el.remove());
            });
        }

        function renderNav() {
            const navContainer = document.getElementById('nav-links-sb');
            navContainer.innerHTML = '';

            channels.forEach((item, index) => {
                const div = document.createElement('div');
                div.className = `nav-item-sb${item.active ? ' active-sb' : ''}`;
                div.dataset.index = index;
                div.innerHTML = `
                    <a href="?communityId=${selectedCommunityId}" onclick="updateDot(${index})">
                        ${item.icon ? `<span class="material-icons me-3">${item.icon}</span>` : '<span class="material-icons me-3" style="opacity: 0;">place</span>'}
                        <span class="text-sb">${item.label}</span>
                        ${item.dot ? `<span class="dot-sb ms-auto"></span>` : ''}
                    </a>
                `;
                navContainer.appendChild(div);
            });
        }

        document.getElementById('user-profile-btn-sb2').addEventListener('click', () => {
            window.location.href = '/Account';
        });

        document.getElementById('hamburger-menu-btn-sb2').addEventListener('click', () => {
            window.location.href = '/Account/Logout';
        });

        const userId = '@User.GetId()';
        fetch(`/account/users/${userId}/Firstname`)
            .then(response => {
                if (!response.ok) {
                    throw new Error(`Failed to fetch username. Status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                document.getElementById('username-sb2').innerText = data.username;
            })
            .catch(error => {
                console.error('Error fetching username:', error);
            });

        fetchCommunities();
        renderNav();
    });
</script>




